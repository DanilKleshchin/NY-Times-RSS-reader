apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'

def apiKeyPropertiesFile = rootProject.file("apikey.properties")
def apiKeyProperties = new Properties()
apiKeyProperties.load(new FileInputStream(apiKeyPropertiesFile))

android {
    compileSdkVersion compile_sdk_version
    defaultConfig {
        applicationId "com.danil.kleshchin.rss"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "API_KEY", apiKeyProperties['API_KEY'])
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation project(':domain')
    implementation project(':data')

    implementation "com.github.DanilKleshchin:android-elapsed-time:$elapsed_time_version"
    //Material design
    implementation "com.google.android.material:material:$material_design_version"
    implementation "androidx.cardview:cardview:$cardview_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipe_refresh_version"

    //Navigation component
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "androidx.recyclerview:recyclerview:$recycler_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$gson_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logger_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"

    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger:$dagger_version"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"

    androidTestImplementation "androidx.test:rules:$android_instrumental_test_version"
    androidTestImplementation "androidx.test:runner:$android_instrumental_test_version"
    androidTestImplementation "androidx.test.ext:junit:$android_instrumental_junit_version"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "com.android.support.test:runner:$test_runner_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_version"
}
